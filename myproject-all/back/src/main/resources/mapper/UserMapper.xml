<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.UserDao">

    <select id="countUser" resultType="Integer" parameterType="com.alibaba.fastjson.JSONObject">
        SELECT count(0)
        FROM sys_user u
        WHERE u.delete_status = '1'
        <if test="username !=null and username !=''">
            <if test="appId !=null and appId !=''">
                and  u.app_id=#{appId}
            </if>
        </if>
    </select>

    <resultMap id="userMap" type="com.heeexy.example.util.model.One2Many">
        <id column="userId"       property="userId"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="roleId"   property="roleId"/>
        <result column="weiixnRoleId" property="weiixnRoleId"/>
        <result column="roleName" property="roleName"/>
        <result column="weixinRoleName" property="weixinRoleName"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <result column="lastLoginTime" property="lastLoginTime"/>
        <result column="deleteStatus" property="deleteStatus"/>
        <collection property="permissionList" ofType="String">
            <id column="permissionName" property="permissionName"/>
        </collection>
    </resultMap>
    <select id="listUser" resultMap="userMap">
        SELECT
            u.*,
            r.role_name                                    roleName,
             rp1.role_name                                 weixinRoleName,
             rp1.id                                        weiixnRoleId,
            CONCAT(p.menu_name, p.permission_name)         permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     delete_status                           deleteStatus,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime,
                     weixin_role_id
                 FROM sys_user
                 WHERE delete_status = '1'
                  <if test="username !=null and username !=''">
                      <if test="appId !=null and appId !=''">
                          and  app_id=#{appId}
                       </if>
                  </if>
                 <if test="myname !=null and myname !=''">
				 and  username like concat("%",#{username},"%") 
			</if>
			<if test="createTime !=null and createTime  !=''">
				and create_time between #{startTime} and  #{endTime}
			</if>
                 ORDER BY id
                 LIMIT #{offSet}, #{pageRow}
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_role rp1 ON rp1.id = u.weixin_role_id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId
    </select>

    <select id="getAllRoles" resultType="com.alibaba.fastjson.JSONObject" parameterType="com.alibaba.fastjson.JSONObject">
        SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1' and app_id=#{appId} and type=#{type}
    </select>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO sys_user
        (username, password, nickname, role_id,app_id,weixin_role_id,store_id) VALUES
            (#{username}, #{password}, #{nickname}, #{roleId},#{appId},#{weiixnRoleId},#{storeId})
    </insert>
  <insert id="addUserfrontAuth" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO sys_user
        (username, password, nickname, role_id,app_id,open_id,avatar_url) VALUES
            (#{username}, #{password}, #{nickName}, #{roleId},#{appid},#{openid},#{avatarUrl})
    </insert>
    <update id="updateUser">
        UPDATE sys_user
        SET
        nickname = #{nickname}
        <if test="password !='' and password !=null">
            , password = #{password}
        </if>
        <if test="roleId !='' and roleId !=null">
           , role_id = #{roleId}
        </if>
		<if test="weiixnRoleId !='' and weiixnRoleId !=null">
           ,weixin_role_id=#{weiixnRoleId}
        </if>
        , delete_status = #{deleteStatus},update_time=#{updateTime}
        WHERE id = #{userId} and id != 10001
    </update>
    <resultMap id="roleMap" type="com.heeexy.example.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
            <result column="nickname" property="nickname"/>
        </collection>
        <collection property="menus" ofType="com.heeexy.example.util.model.One2Many">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionId" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>
    <select id="listRole" resultMap="roleMap">
        SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id and p.type=#{type}
        WHERE r.delete_status = '1' and r.app_id=#{appId} and r.type=#{type}
        ORDER BY r.id, p.id
    </select>
    <resultMap id="permissionMap" type="com.heeexy.example.util.model.One2Many">
        <id column="menuName" property="menuName"/>
        <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
            <id column="id" property="id"/>
            <result column="permissionName" property="permissionName"/>
            <result column="requiredPerm" property="requiredPerm" javaType="Integer"/>
        </collection>
    </resultMap>
    <select id="listAllPermission" resultMap="permissionMap">
        SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p where p.type=#{type}
    </select>

    <insert id="insertRole" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO sys_role
        (role_name,app_id,type)
        VALUES (#{roleName},#{appId},#{type})
    </insert>

    <insert id="insertRolePermission">
        insert into sys_role_permission (role_id, permission_id)
        values
        <foreach collection="permissions" item="item" index="index" separator=",">
            (#{roleId}, #{item})
        </foreach>
    </insert>

    <resultMap id="aRole" type="com.heeexy.example.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
        </collection>
        <collection property="permissionIds" ofType="Integer">
            <id column="permissionId" property="permissionId"/>
        </collection>
    </resultMap>
    <select id="getRoleAllInfo" resultMap="aRole">
        SELECT
            r.id        roleId,
            r.role_name roleName,
            u.id        userId,
            p.id        permissionId
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
    </select>

    <update id="removeRole">
        UPDATE sys_role
        SET
            delete_status = '2'
        WHERE id = #{roleId} and id !=1
    </update>
    <update id="removeRoleAllPermission">
        UPDATE sys_role_permission
        SET
            delete_status = '2'
        WHERE role_id = #{roleId}
    </update>

    <update id="removeOldPermission">
        UPDATE sys_role_permission
        SET
        delete_status = '2'
        WHERE role_id = #{roleId}
        AND permission_id in (
        <foreach collection="permissions" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>
    <update id="updateRoleName">
        UPDATE sys_role
        SET
            role_name = #{roleName}
        WHERE id = #{roleId}
    </update>
    <select id="queryExistUsername" resultType="int" parameterType="com.alibaba.fastjson.JSONObject">
        select count(0)
         from sys_user
         WHERE username=#{username}
         AND delete_status='1' and app_id=#{appId};
    </select>
    <select id="getUserByOppenId" resultType="string">
        select open_id
         from sys_user
         WHERE open_id=#{open_id}
         AND delete_status='1';
    </select>
    <update id="updateMobile">
    	update sys_user set telephone=#{phone} where app_id=#{appid}
    </update>
    <select id="listPermission" resultType="com.alibaba.fastjson.JSONObject">
SELECT
	p.id                  id,
	p.menu_name           menuName,
	p.permission_name     permissionName,
	p.required_permission requiredPerm,
	p.permission_code     permissionCode,
	img.show_order        showOrder,
	img.img_url           imgUrl
FROM
	sys_permission p
	LEFT JOIN sys_per_img img ON p.id = img.sys_per_id
	AND img.app_id = #{appid}
WHERE
	type =#{type} order by img.show_order
    </select>
    <insert id="updateWeiRole" parameterType="com.alibaba.fastjson.JSONObject">
        insert into sys_per_img(img_url,show_order,app_id,sys_per_id)
        values(#{imgUrl},#{showOrder},#{appId},#{sysPerId})
    </insert>
    <delete id="deleteWeiRole" parameterType="com.alibaba.fastjson.JSONObject">
        delete from sys_per_img where app_id=#{appId} and sys_per_id=#{sysPerId}
    </delete>
    <select id="getMyPermission" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
 SELECT
    p.permission_code permissionCode,
    img.show_order    showOrder,
    img.img_url       imgUrl,
    p.permission_name permissionName
FROM
	sys_user u
	INNER JOIN sys_role_permission rp ON u.weixin_role_id = rp.role_id
	INNER JOIN sys_permission p ON rp.permission_id = p.id
	AND rp.delete_status = '1'
	AND p.type = 'weixin'
	LEFT JOIN sys_per_img img ON p.id = img.sys_per_id
	AND img.app_id = #{appId}
WHERE
	u.id = #{userId}
	AND u.delete_status = '1'
ORDER BY
	showOrder
    </select>
     <select id="getRoleIdByJson" parameterType="com.alibaba.fastjson.JSONObject" resultType="string">
        select id from sys_role where app_id=#{appId} and role_name='商家'
    </select>
    <update id="updateStoreRole" parameterType="com.alibaba.fastjson.JSONObject">
        update sys_user set weixin_role_id=#{weixin_role_id} where id=#{userId}
    </update>
</mapper>