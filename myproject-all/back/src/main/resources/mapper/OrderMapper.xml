<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.OrderDao">
	<insert id="insertOrderBatch" parameterType="java.util.List" useGeneratedKeys="false">
    			insert into shop_order
    			(order_id,user_id,total_pay,discount_pay,practice_pay,state,create_time)
    			values
    			<foreach collection="list" item="item" index="index" separator=",">
    				(
    				#{item.orderId},
					#{item.userId},
					#{item.totalPay},
					#{item.discountPay},
					#{item.practicePay},
					#{item.state},
					#{item.createTime}
    				)
    		     </foreach>		
    </insert>    
    <insert id="insertOrder" parameterType="com.alibaba.fastjson.JSONObject" >
    			insert into shop_order
    			(order_id,user_id,total_pay,discount_pay,practice_pay,state,create_time)
    			values
    				(
    					#{orderId},
    					#{userId},
    					#{totalPay},
    					#{discountPay},
    					#{practicePay},
    					#{state},
    					#{createTime}
    				)	
    </insert>

	<resultMap id="orderMap"
			   type="com.heeexy.example.entity.OrderInfo">
		<id column="orderId" property="orderId" />
		<result column="storeName" property="storeName" />
		<result column="storeId" property="storeId" />
		<result column="totalPay" property="totalPay" />
		<result column="discountPay" property="discountPay" />
		<result column="practicePay" property="practicePay" />
		<result column="imgUrl" property="imgUrl" />
		<result column="addressId" property="addressId" />
		<result column="state" property="state" />
		<result column="logisticsNo" property="logisticsNo" />
		<result column="logisticsType" property="logisticsType" />
		<collection property="goodsList" ofType="com.alibaba.fastjson.JSONObject">
			<id column="goodsId" property="goodsId" />
			<result column="goodsName" property="goodsName" />
			<result column="count" property="count" />
			<result column="price" property="price" />
			<result column="orderPrice" property="orderPrice" />
			<result column="goodsState" property="goodsState" />
			<result column="bannerUrl" property="bannerUrl" />
		</collection>
	</resultMap>
	<select id="getAllInfoOrderByOrderIds" resultMap="orderMap">
		SELECT
		o.order_id          orderId,
		o.total_pay         totalPay,
		o.state,
		o.discount_pay      discountPay,
		o.practice_pay      practicePay,
		s.store_name        storeName,
		s.id storeId,
		g.goods_name        goodsName,
		g.price price,
		o_goods.price       orderPrice,
		o_goods.goods_id    goodsId,
		g.banner_url        bannerUrl,
		o_goods.count       count,
		g.state             goodsState,
		g.banner_url        bannerUrl,
		s.img_url           imgUrl,
		o.address_id        addressId,
		o.logistics_no      logisticsNo,
		o.logistics_type    logisticsType
		FROM
		shop_order o
		INNER JOIN order_goods o_goods ON o.order_id = o_goods.order_id
		INNER JOIN goods g ON o_goods.goods_id = g.id
		INNER JOIN store s ON g.store_id = s.id
	where o.order_id in
	<foreach collection="orderIds" item="id" index="index" open="(" close=")" separator=",">
		#{id}
	</foreach> 
	
	</select>
	<update id="updateOrderState">
	   update shop_order set state=#{state},out_trade_no=#{out_trade_no},address_id=#{addressId} where order_id in
	   <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
		#{id}
	</foreach>
	</update>
	<update id="updateByOutTradeNo">
	   update shop_order set state=#{state} where out_trade_no =#{out_trade_no}
	 
	</update>
	<select id="getOrderIdsByOutTradeNo" resultType="string">
		select order_id from shop_order where out_trade_no =#{out_trade_no}
	</select>
	<select id="getOrderInfoByState" resultMap="orderMap1">
		SELECT
		o.order_id        orderId,
		o.total_pay       totalPay,
		o.discount_pay    discountPay,
		o.practice_pay    practicePay,
		s.store_name      storeName,
		s.id storeId,
		g.goods_name      goodsName,
		o_goods.price     price,
		o_goods.goods_id  goodsId,
		o_goods.price     orderPrice,
		g.banner_url      bannerUrl,
		o_goods.count     count,
		o.state state,
		g.banner_url      bannerUrl,
		s.img_url         imgUrl,
		o.create_time     createTime,
		o.address_id      addressId
		FROM
		shop_order o
		INNER JOIN order_goods o_goods ON o.order_id = o_goods.order_id
		INNER JOIN goods g ON o_goods.goods_id = g.id
		INNER JOIN store s ON g.store_id = s.id
	where 1=1
		<choose>
			<when test="type=='store'">
			AND g.store_id=#{storeId}
			</when>
			<otherwise>
			and  o.user_id=#{userId}
			</otherwise>
		</choose>
	   <if test="state!=null and state !=''">
	   and o.state=#{state} 
	  
	   </if>
	   
	    order by o.create_time desc
	     limit #{pageNo},#{pageSize}
	</select>
	<select id="getOrderInfoByNoPay" resultMap="orderMap1">
		SELECT
		o.order_id            orderId,
		o.total_pay           totalPay,
		o.discount_pay        discountPay,
		o.practice_pay        practicePay,
		s.store_name          storeName,
		s.id storeId,
		g.goods_name          goodsName,
		o_goods.price         price,
		o_goods.goods_id      goodsId,
		o_goods.price         orderPrice,
		g.banner_url          bannerUrl,
		o_goods.count         count,
		o.state state,
		g.banner_url          bannerUrl,
		s.img_url             imgUrl,
		o.create_time         createTime,
		o.send_out_goods_time sendOutGoodsTime
		FROM
		shop_order o
		INNER JOIN order_goods o_goods ON o.order_id = o_goods.order_id
		INNER JOIN goods g ON o_goods.goods_id = g.id
		INNER JOIN store s ON g.store_id = s.id
	where  o.state=#{state} 
	limit #{pageNo},#{pageSize}
	</select>
	<resultMap id="orderMap1"
			   type="com.heeexy.example.entity.OrderInfo">
		<id column="orderId" property="orderId" />
		<result column="storeName" property="storeName" />
		<result column="storeId" property="storeId" />
		<result column="totalPay" property="totalPay" />
		<result column="discountPay" property="discountPay" />
		<result column="practicePay" property="practicePay" />
		<result column="imgUrl" property="imgUrl" />
		<result column="state" property="state" />
		<result column="createTime" property="createTime" />
		<result column="addressId" property="addressId" />
		<result column="sendOutGoodsTime" property="sendOutGoodsTime" />
		<collection property="goodsList" ofType="com.alibaba.fastjson.JSONObject">
			<id column="goodsId" property="goodsId" />
			<result column="goodsName" property="goodsName" />
			<result column="count" property="count" />
			<result column="price" property="price" />
			<result column="orderPrice" property="orderPrice" />
			<result column="bannerUrl" property="bannerUrl" />
		</collection>
	</resultMap>
	<resultMap id="orderMap2" type="com.heeexy.example.entity.OrderInfo" extends="orderMap1">
		<result column="name" property="name" />
		<result column="province" property="province" />
		<result column="city" property="city" />
		<result column="country" property="country" />
		<result column="detail" property="detail" />
		<result column="telephone" property="telephone" />
		<result column="logisticsNo" property="logisticsNo" />
		<result column="logisticsType" property="logisticsType" />
		<result column="wuLiu" property="wuLiu" />
	</resultMap>
	<update id="cancelOrderState">
	update shop_order set state=#{state} where order_id=#{orderId}
	</update>
	<select id="countOrder" resultType="Integer">
		SELECT count(o.order_id)
		FROM shop_order o inner join sys_user s on o.user_id =s.id
		<where>
			<if test="appId!=null and appId !=''">
				s.app_id=#{appId}
			</if>
			<if test="storeId!=null and storeId !=''">
				and s.store_id=#{storeId}
			</if>
		</where>
	</select>
	<select id="getOrderInfoList" resultMap="orderMap2" parameterType="com.alibaba.fastjson.JSONObject">
		SELECT
		o.order_id        orderId,
		o.total_pay       totalPay,
		o.discount_pay    discountPay,
		o.practice_pay    practicePay,
		s.store_name      storeName,
		s.id              storeId,
		g.goods_name      goodsName,
		o_goods.price     price,
		o_goods.goods_id  goodsId,
		o_goods.price     orderPrice,
		g.banner_url      bannerUrl,
		o_goods.count     count,
		o.state           state,
		g.banner_url      bannerUrl,
		s.img_url         imgUrl,
		o.create_time     createTime,
		o.address_id      addressId,
		address.name,
		address.province,
		address.city,
		address.country,
		address.detail,
		address.telephone,
		o.logistics_no    logisticsNo,
		o.logistics_type  logisticsType,
		l.name            wuLiu
		FROM
		shop_order o
		INNER JOIN order_goods o_goods ON o.order_id = o_goods.order_id
		INNER JOIN goods g ON o_goods.goods_id = g.id
		INNER JOIN store s ON g.store_id = s.id
		inner join sys_user u on o.user_id =u.id
		left join shop_order_address address on o.order_id =address.order_id
		left join logistics l on l.type =o.logistics_type
		<where>
			<if test="state!=null and state !=''">
				and o.state=#{state}
			</if>
			<if test="createTime !=null and createTime  !=''">
				and o.create_time between #{startTime} and  #{endTime}
			</if>
			<if test="orderId !=null and orderId  !=''">
				and o.order_id =#{orderId}
			</if>
			<if test="appId!=null and appId !=''">
				and u.app_id=#{appId}
			</if>
			<if test="storeId!=null and storeId !=''">
				and u.store_id=#{storeId}
			</if>
		</where>

		order by o.create_time desc
		LIMIT #{offSet}, #{pageRow}
	</select>
	<update id="updateOrderStateByOrderId">
		update shop_order set state=#{state} where order_id =#{orderId}
	</update>
	<select id="countOrderByState" resultType="int">
		select count(1) from shop_order where state=#{state}
	</select>
</mapper>