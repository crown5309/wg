<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.OrderDao">
	<insert id="insertOrderBatch" parameterType="java.util.List" useGeneratedKeys="false">
    			insert into shop_order
    			(order_id,user_id,total_pay,discount_pay,practice_pay,state)
    			values
    			<foreach collection="list" item="item" index="index" separator=",">
    				(
    					#{item.orderId},
    					#{item.userId},
    					#{item.totalPay},
    					#{item.discountPay},
    					#{item.practicePay},
    					#{item.state}
    				)
    		     </foreach>		
    </insert>    
    <insert id="insertOrder" parameterType="com.alibaba.fastjson.JSONObject" >
    			insert into shop_order
    			(order_id,user_id,total_pay,discount_pay,practice_pay,state)
    			values
    				(
    					#{orderId},
    					#{userId},
    					#{totalPay},
    					#{discountPay},
    					#{practicePay},
    					#{state}
    				)	
    </insert>

	<resultMap id="orderMap"
			   type="com.heeexy.example.entity.OrderInfo">
		<id column="orderId" property="orderId" />
		<result column="storeName" property="storeName" />
		<result column="storeId" property="storeId" />
		<result column="totalPay" property="totalPay" />
		<result column="discountPay" property="discountPay" />
		<result column="practicePay" property="practicePay" />
		<result column="imgUrl" property="imgUrl" />
		<collection property="goodsList" ofType="com.alibaba.fastjson.JSONObject">
			<id column="goodsId" property="goodsId" />
			<result column="goodsName" property="goodsName" />
			<result column="count" property="count" />
			<result column="price" property="price" />
			<result column="orderPrice" property="orderPrice" />
			<result column="state" property="state" />
			<result column="bannerUrl" property="bannerUrl" />
		</collection>
	</resultMap>
	<select id="getAllInfoOrderByOrderIds" resultMap="orderMap">
		SELECT
		o.order_id  orderId,
		o.total_pay totalPay,
		o.discount_pay discountPay,
		o.practice_pay practicePay,
		s.store_name storeName,
		s.id storeId,
		g.goods_name goodsName,
		g.price price,
		o_goods.price orderPrice,
		o_goods.goods_id goodsId,
		g.banner_url  bannerUrl,
		o_goods.count count,
		g.state state,
		g.banner_url bannerUrl,
		s.img_url imgUrl
		FROM
		shop_order o
		INNER JOIN order_goods o_goods ON o.order_id = o_goods.order_id
		INNER JOIN goods g ON o_goods.goods_id = g.id
		INNER JOIN store s ON g.store_id = s.id
	where o.order_id in
	<foreach collection="orderIds" item="id" index="index" open="(" close=")" separator=",">
		#{id}
	</foreach> 
	and o.user_id=#{userId}
	</select>
	<update id="updateOrderState">
	   update shop_order set state=#{state},out_trade_no=#{out_trade_no} where order_id in
	   <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
		#{id}
	</foreach>
	</update>
	<update id="updateByOutTradeNo">
	   update shop_order set state=#{state} where out_trade_no =#{out_trade_no}
	 
	</update>
	<select id="getOrderIdsByOutTradeNo" resultType="string">
		select order_id from shop_order where out_trade_no =#{out_trade_no}
	</select>
	<select id="getOrderInfoByState" resultMap="orderMap1">
		SELECT
		o.order_id  orderId,
		o.total_pay totalPay,
		o.discount_pay discountPay,
		o.practice_pay practicePay,
		s.store_name storeName,
		s.id storeId,
		g.goods_name goodsName,
		o_goods.price price,
		o_goods.goods_id goodsId,
		o_goods.price orderPrice,
		g.banner_url  bannerUrl,
		o_goods.count count,
		o.state state,
		g.banner_url bannerUrl,
		s.img_url imgUrl,
		o.create_time createTime
		FROM
		shop_order o
		INNER JOIN order_goods o_goods ON o.order_id = o_goods.order_id
		INNER JOIN goods g ON o_goods.goods_id = g.id
		INNER JOIN store s ON g.store_id = s.id
	where  o.user_id=#{userId}
	   <if test="state!=null and state !=''">
	   and o.state=#{state} 
	   limit #{pageNo},#{pageSize}
	   </if>
	</select>
	<select id="getOrderInfoByNoPay" resultMap="orderMap1">
		SELECT
		o.order_id  orderId,
		o.total_pay totalPay,
		o.discount_pay discountPay,
		o.practice_pay practicePay,
		s.store_name storeName,
		s.id storeId,
		g.goods_name goodsName,
		o_goods.price price,
		o_goods.goods_id goodsId,
		o_goods.price orderPrice,
		g.banner_url  bannerUrl,
		o_goods.count count,
		o.state state,
		g.banner_url bannerUrl,
		s.img_url imgUrl,
		o.create_time createTime
		FROM
		shop_order o
		INNER JOIN order_goods o_goods ON o.order_id = o_goods.order_id
		INNER JOIN goods g ON o_goods.goods_id = g.id
		INNER JOIN store s ON g.store_id = s.id
	where  o.state=#{state} 
	</select>
	<resultMap id="orderMap1"
			   type="com.heeexy.example.entity.OrderInfo">
		<id column="orderId" property="orderId" />
		<result column="storeName" property="storeName" />
		<result column="storeId" property="storeId" />
		<result column="totalPay" property="totalPay" />
		<result column="discountPay" property="discountPay" />
		<result column="practicePay" property="practicePay" />
		<result column="imgUrl" property="imgUrl" />
		<result column="state" property="state" />
		<result column="createTime" property="createTime" />
		<collection property="goodsList" ofType="com.alibaba.fastjson.JSONObject">
			<id column="goodsId" property="goodsId" />
			<result column="goodsName" property="goodsName" />
			<result column="count" property="count" />
			<result column="price" property="price" />
			<result column="orderPrice" property="orderPrice" />
			<result column="bannerUrl" property="bannerUrl" />
		</collection>
	</resultMap>
	<update id="cancelOrderState">
	update shop_order set state=#{state} where order_id=#{orderId}
	</update>
</mapper>